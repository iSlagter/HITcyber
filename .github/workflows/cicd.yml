name: Trigger auto deployment for HIT cyber course

on:
  push:
    branches: 
      [ master ]
    paths:
    - '**'
    - '.github/workflows/hit-c-app-AutoDeployTrigger.yml'

  workflow_dispatch:      

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions: 
      id-token: write
      contents: read

    steps:
      - name: Checkout to the branch
        uses: actions/checkout@v2

      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.HITCAPP_AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.HITCAPP_AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.HITCAPP_AZURE_SUBSCRIPTION_ID }}

      - name: Create .env file (Secure)
        run: |
          echo "MySQLuser=${{ secrets.MySQLuser }}" >> ./communication_ltd_secure/.env
          echo "MySQLpasswd=${{ secrets.MySQLpasswd }}" >> ./communication_ltd_secure/.env

      - name: Create .env file (Vulnerable)
        run: |
          echo "MySQLuser=${{ secrets.MySQLuser }}" >> ./communication_ltd_vulnerable/.env
          echo "MySQLpasswd=${{ secrets.MySQLpasswd }}" >> ./communication_ltd_vulnerable/.env

      - name: Build and push container image (Secure)
        run: |
          docker build -t hitacr.azurecr.io/hit-cyber-image-secure:latest ./communication_ltd_secure
          echo "${{ secrets.HITCAPP_REGISTRY_PASSWORD }}" | docker login hitacr.azurecr.io -u "${{ secrets.HITCAPP_REGISTRY_USERNAME }}" --password-stdin
          docker push hitacr.azurecr.io/hit-cyber-image-secure:latest

      - name: Build and push container image (Vulnerable)
        run: |
          docker build -t hitacr.azurecr.io/hit-cyber-image-vulnerable:latest ./communication_ltd_vulnerable
          echo "${{ secrets.HITCAPP_REGISTRY_PASSWORD }}" | docker login hitacr.azurecr.io -u "${{ secrets.HITCAPP_REGISTRY_USERNAME }}" --password-stdin
          docker push hitacr.azurecr.io/hit-cyber-image-vulnerable:latest
      
      - name: Create Web App (Secure) if not exists
        run: |
          if ! az webapp show --name hit-app-secure --resource-group HIT; then
               az webapp create --name hit-app-secure --resource-group HIT --plan ASP-HIT-ba23 --container-image-name "https://hitacr.azurecr.io/hit-cyber-image-vulnerable:latest" --container-registry-url https://hitacr.azurecr.io --container-registry-user ${{ secrets.HITCAPP_REGISTRY_USERNAME }} --container-registry-password ${{ secrets.HITCAPP_REGISTRY_PASSWORD }}
          fi
  
      - name: Create Web App (Vulnerable) if not exists
        run: |
          if ! az webapp show --name hit-app-vulnerable --resource-group HIT; then
               az webapp create --name hit-app-vulnerable --resource-group HIT --plan ASP-HIT-ba23 --container-image-name "https://hitacr.azurecr.io/hit-cyber-image-vulnerable:latest" --container-registry-url https://hitacr.azurecr.io --container-registry-user ${{ secrets.HITCAPP_REGISTRY_USERNAME }} --container-registry-password ${{ secrets.HITCAPP_REGISTRY_PASSWORD }}
          fi
          
      - name: Deploy Web App from ACR (Secure)
        run: |
          az webapp config container set --name hit-app-secure --resource-group HIT --container-image-name hitacr.azurecr.io/hit-cyber-image-secure:latest --container-registry-url https://hitacr.azurecr.io --container-registry-user ${{ secrets.HITCAPP_REGISTRY_USERNAME }} --container-registry-password ${{ secrets.HITCAPP_REGISTRY_PASSWORD }}

      - name: Deploy Web App from ACR (Vulnerable)
        run: |
          az webapp config container set --name hit-app-vulnerable --resource-group HIT --container-image-name hitacr.azurecr.io/hit-cyber-image-vulnerable:latest --container-registry-url https://hitacr.azurecr.io --container-registry-user ${{ secrets.HITCAPP_REGISTRY_USERNAME }} --container-registry-password ${{ secrets.HITCAPP_REGISTRY_PASSWORD }}
